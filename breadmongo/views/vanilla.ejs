<!DOCTYPE html>
<html>

<head>
    <title>
        BREAD
    </title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/ccbf951677.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
</head>

<body>
    <div class="container">
        <h1>
            BREAD ( Browse, Read, Edit, Add, Delete )
        </h1>
        <h2>Filters</h2>
        <form id="form-search">
            <div class="row mb-3">
                <label for="id" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxId" name="checkboxId">
                    ID
                </label>
                <div class="col-sm-9">
                    <input type="number" class="form-control" id="idFilter" name="id" placeholder="ID">
                </div>
            </div>
            <div class="row mb-3">
                <label for="string" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxString" name="checkboxString">
                    String
                </label>
                <div class="col-sm-9">
                    <input type="text" class="form-control" id="stringFilter" name="string" placeholder="String">
                </div>
            </div>
            <div class="row mb-3">
                <label for="integer" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxInteger" name="checkboxInteger">
                    Integer
                </label>
                <div class="col-sm-9">
                    <input type="number" class="form-control" id="integerFilter" name="integer" placeholder="Integer">
                </div>
            </div>
            <div class="row mb-3">
                <label for="float" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxFloat" name="checkboxFloat">
                    Float
                </label>
                <div class="col-sm-9">
                    <input type="number" step="any" class="form-control" id="floatFilter" name="float"
                        placeholder="float">
                </div>
            </div>
            <div class="row mb-3">
                <label for="date" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxDate" name="checkboxDate">
                    Date
                </label>
                <div class="col-sm-9">
                    <input class="form-control" placeholder="Start Date" name="startDate" type="text"
                        onfocus="(this.type='date')" onblur="(this.type='text')" id="startDate"
                        style="width: 25%; margin-bottom: 0px;" />
                    to
                    <input class="form-control" placeholder="End Date" name="endDate" type="text"
                        onfocus="(this.type='date')" onblur="(this.type='text')" id="endDate"
                        style="width: 25%; margin-top: 0px;" />
                </div>
            </div>
            <div class="row mb-3">
                <label for="boolean" class="col-sm-3 col-form-label">
                    <input type="checkbox" id="checkboxBoolean" name="checkboxBoolean">
                    Boolean
                </label>
                <div class="col-sm-9">
                    <select class="form-control" name="boolean" id="booleanFilter">
                        <option value="">Choose the boolean...</option>
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                </div>
            </div>
            <div class="row mb-3" style="text-align: center;">
                <center>
                    <button type="submit" class="btn btn-primary" style="width: 10%;">Search Filter</button>
                    <a type="button" class="btn btn-danger" href="/vanilla" style="width: 10%;">Reset Filter</a>
                </center>
            </div>
        </form>
        <div class="row mb-3">
            <table class="table table-striped">
                <thead id="sorting">
                </thead>
                <tbody>
                </tbody>
            </table>
            <nav class="pagination" id="pagination" aria-label="Page navigation example">
            </nav>

            <!-- add form -->
            <form id="create-form" style="display: none;">
                <br>
                <div class="row mb-3">
                    <h3 style="text-align: center;">Tambah Data</h3>
                </div>
                <input type="hidden" name="page" value="1">
                <div class="row mb-3">
                    <label for="inputId" class="col-sm-4 col-form-label">
                        ID
                    </label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="id" name="id">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="inputStr" class="col-sm-4 col-form-label">
                        String
                    </label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="string" name="string">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="inputInt" class="col-sm-4 col-form-label">
                        Integer
                    </label>
                    <div class="col-sm-8">
                        <input type="number" class="form-control" id="integer" name="integer">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="inputFloat" class="col-sm-4 col-form-label">
                        Float
                    </label>
                    <div class="col-sm-8">
                        <input type="number" step="any" class="form-control" id="float" name="float">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="inputDate" class="col-sm-4 col-form-label">
                        Date
                    </label>
                    <div class="col-sm-4">
                        <input type="date" class="form-control" id="date" name="date">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="inputBol" class="col-sm-4 col-form-label">
                        Boolean
                    </label>
                    <div class="col-sm-8">
                        <select name="boolean" id="boolean" class="form-select">
                            <option>Choose the boolean</option>
                            <option value="true">True</option>
                            <option value="false">False</option>
                        </select>
                    </div>
                </div>
                <center>
                    <button type="submit" class="btn btn-success" style="width: 10%; margin-bottom: 10px;">Add
                        Data</button>
                </center>
            </form>
            <button id="showAdd" type="submit" onclick="toggleAddData()" class="btn btn-primary">Add Data</button>

            <!-- edit form -->
            <form id="edit-form" style="display: none;">
                <br>
                <div class="row mb-3">
                    <h3 style="text-align: center;">Edit Data</h3>
                </div>
                <div class="row mb-3" hidden>
                    <label for="idEdit" class="col-sm-4 col-form-label">ID</label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="idEdit" name="id" disabled>
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="idEdit" class="col-sm-4 col-form-label">Number</label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="numberEdit" name="numberEdit" disabled>
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="stringEdit" class="col-sm-4 col-form-label">String</label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="stringEdit" name="string">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="integerEdit" class="col-sm-4 col-form-label">Integer</label>
                    <div class="col-sm-8">
                        <input type="number" class="form-control" id="integerEdit" name="integer">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="floatEdit" class="col-sm-4 col-form-label">Float</label>
                    <div class="col-sm-8">
                        <input type="number" step="any" class="form-control" id="floatEdit" name="float">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="dateEdit" class="col-sm-4 col-form-label">Date</label>
                    <div class="col-sm-8">
                        <input type="date" class="form-control" id="dateEdit" name="date">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="booleanEdit" class="col-sm-4 col-form-label">Boolean</label>
                    <div class="col-sm-8">
                        <select class="form-select" id="booleanEdit" name="boolean">
                            <option>Choose the boolean</option>
                            <option value="true">True</option>
                            <option value="false">False</option>
                        </select>
                    </div>
                </div>
                <center>
                    <button type="submit" class="btn btn-success" style="width: 10%; margin-bottom: 10px;">Update
                        Data</button>
                </center>
            </form>
        </div>
    </div>
    <script>

        let params = {
            page: 1
        };

        document.addEventListener('DOMContentLoaded', function () {
            sort('number', 'asc');

            document.getElementById('form-search').addEventListener('submit', function (event) {
                event.preventDefault();
                searchData();
            });
        });

        document.getElementById('create-form').addEventListener("submit", function (event) {
            event.preventDefault();
            const number = document.getElementById('id').value;
            const string = document.getElementById('string').value;
            const integer = document.getElementById('integer').value;
            const float = document.getElementById('float').value;
            const date = document.getElementById('date').value;
            const boolean = document.getElementById('boolean').value;
            createData(number, string, integer, float, date, boolean);
        });

        document.getElementById('edit-form').addEventListener("submit", function (event) {
            event.preventDefault();
            const id = document.getElementById('idEdit').value;
            const number = document.getElementById('numberEdit').value;
            const string = document.getElementById('stringEdit').value;
            const integer = document.getElementById('integerEdit').value;
            const float = document.getElementById('floatEdit').value;
            const date = document.getElementById('dateEdit').value;
            const boolean = document.getElementById('booleanEdit').value;
            updateData(id, number, string, integer, float, date, boolean);
        });

        const loadData = () => {
            fetch('/users?page=' + params.page)
                .then(response => response.json())
                .then(data => {
                    let html = '';
                    data.datas.forEach(data => {
                        html += `
                                <tr>
                                    <td>${data.number}</td>
                                    <td>${data.string}</td>
                                    <td>${data.integer}</td>
                                    <td>${data.float}</td>
                                    <td>${moment(data.date).format('DD-MMM-YYYY')}</td>
                                    <td>${data.boolean}</td>
                                    <td>
                                        <button class="btn btn-success" onclick="editData('${data._id}')">Edit</button>
                                        <button class="btn btn-danger" onclick="deleteData('${data._id}')">Delete</button>
                                    </td>
                                </tr>
                                `;
                    });
                    document.querySelector('table tbody').innerHTML = html;
                    params = { ...params, page: data.page, pages: data.pages };
                    generatePagination(params);
                })
                .catch(error => {
                    console.error(error);
                });
        };

        const searchData = () => {
            const number = document.getElementById('idFilter').value;
            const checkboxId = document.getElementById('checkboxId').checked;
            const string = document.getElementById('stringFilter').value;
            const checkboxString = document.getElementById('checkboxString').checked;
            const integer = document.getElementById('integerFilter').value;
            const checkboxInteger = document.getElementById('checkboxInteger').checked;
            const float = document.getElementById('floatFilter').value;
            const checkboxFloat = document.getElementById('checkboxFloat').checked;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const checkboxDate = document.getElementById('checkboxDate').checked;
            const boolean = document.getElementById('booleanFilter').value;
            const checkboxBoolean = document.getElementById('checkboxBoolean').checked;
            params = { ...params, number, checkboxId: checkboxId, string, checkboxString: checkboxString, integer, checkboxInteger: checkboxInteger, float, checkboxFloat: checkboxFloat, startDate, endDate, checkboxDate: checkboxDate, boolean, checkboxBoolean: checkboxBoolean }
            loadData();
        };

        const changePage = page => {
            params = { ...params, page }
            loadData()
        }

        const sort = (sortBy, sortMode) => {
            let sortingElement = document.getElementById('sorting');
            let html = `<tr>
                            <th style="width: 6%;">No.
                                <i class="fa ${sortMode === 'asc' && sortBy === 'number' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'number' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('number', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 19%;">String
                                <i class="fa ${sortMode === 'asc' && sortBy === 'string' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'string' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('string', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 14%;">Integer
                                <i class="fa ${sortMode === 'asc' && sortBy === 'integer' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'integer' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('integer', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 14%;">Float
                                <i class="fa ${sortMode === 'asc' && sortBy === 'float' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'float' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('float', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 19%;">Date
                                <i class="fa ${sortMode === 'asc' && sortBy === 'date' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'date' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('date', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 14%;">Boolean
                                <i class="fa ${sortMode === 'asc' && sortBy === 'boolean' ? 'fa-arrow-down-short-wide' : sortMode === 'desc' && sortBy === 'boolean' ? 'fa-arrow-up-short-wide' : 'fa-sort'}" onClick="sort('boolean', '${sortMode === 'asc' ? 'desc' : 'asc'}')"></i>
                            </th>
                            <th style="width: 14%;">Action</th>
                        </tr>`;
            sortingElement.innerHTML = html;

            params = { ...params, sortBy, sortMode };
            loadData();
        };

        const generatePagination = ({ page, pages }) => {
            const paginationContainer = document.querySelector('#pagination');
            const paginationList = document.createElement('ul');
            paginationList.className = 'pagination';

            let html = '';

            if (page > 1) {
                html += `
                        <li class="page-item">
                            <a class="page-link" href="javascript:void(0)" aria-label="Previous" onClick="changePage(${page - 1})">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        `;
            }

            for (let i = 1; i <= pages; i++) {
                html += `
                        <li class="page-item${page == i ? ' active' : ''}">
                            <a class="page-link" href="javascript:void(0)" onClick="changePage(${i})">${i}</a>
                        </li>
                        `;
            }

            if (page < pages) {
                html += `
                        <li class="page-item">
                            <a class="page-link" href="javascript:void(0)" aria-label="Next" onClick="changePage(${page + 1})">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                        `;
            }

            paginationList.innerHTML = html;
            paginationContainer.innerHTML = '';
            paginationContainer.appendChild(paginationList);
        };

        const createData = (number, string, integer, float, date, boolean) => {
            fetch('/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ number, string, integer, float, date, boolean })
            })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('id').value = '';
                    document.getElementById('string').value = '';
                    document.getElementById('integer').value = '';
                    document.getElementById('float').value = '';
                    document.getElementById('date').value = '';
                    document.getElementById('boolean').value = '';
                    loadData();
                    toggleAddData();
                })
                .catch(error => {
                    console.log(error);
                });
        };

        const editData = (id) => {
            fetch(`/users/edit/${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('idEdit').value = data._id;
                    document.getElementById('numberEdit').value = data.number;
                    document.getElementById('stringEdit').value = data.string;
                    document.getElementById('integerEdit').value = data.integer;
                    document.getElementById('floatEdit').value = data.float;
                    document.getElementById('dateEdit').value = moment(data.date).format('YYYY-MM-DD');
                    document.getElementById('booleanEdit').value = data.boolean.toString();
                    document.getElementById('edit-form').style.display = 'block';
                })
                .catch(error => {
                    console.error(error);
                });
        };

        const updateData = (id, number, string, integer, float, date, boolean) => {
            fetch(`/users/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ number, string, integer, float, date, boolean })
            })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('numberEdit').value = data.number;
                    document.getElementById('stringEdit').value = '';
                    document.getElementById('integerEdit').value = '';
                    document.getElementById('floatEdit').value = '';
                    document.getElementById('dateEdit').value = '';
                    document.getElementById('booleanEdit').value = '';
                    loadData();
                    document.getElementById('edit-form').style.display = 'none';
                })
                .catch(error => {
                    console.log(error);
                });
        };

        const deleteData = (id) => {
            fetch(`users/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id })
            })
                .then(() => {
                    loadData();
                })
                .catch(error => {
                    console.error(error);
                });
        };

        const toggleAddData = () => {
            const createForm = document.querySelector('#create-form');
            const addDataButton = document.querySelector('#showAdd');

            if (createForm.style.display === "block") {
                createForm.style.display = "none";
                addDataButton.textContent = "Add Data";
            } else {
                createForm.style.display = "block";
                addDataButton.textContent = "Close";
            }
        };

    </script>
</body>

</html>